// one of the standards in used these days is 1140px grid
.row {
  // diff max-width and width, >= 1140px width will be 1140px, < 1140px width will be 100% of available spacs
  max-width: $grid-width;
  // way to center block element inside of another block element, set to auto will make left and right the same, so it will be centered
  margin: 0 auto;
  // select everything except the last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-land) {
    width: 100%;
    padding: 0 3rem;
  }

  @include respond(tab-port) {
    max-width: 75rem;
    padding: 0 3rem;
  }

  @include respond(phone) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;
  //   example of attribute selector for img, and attribute selector is very useful
  //   [alt="Logo"] {
  //     display: none;
  //   }

  // ^= all the element start with ! check more with *= (contain), $= (end with)
  [class^="col-"] {
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
      @include respond(tab-land) {
        margin-right: $gutter-horizontal-small;
      }
      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }
  .col-1-of-2 {
    // unlike scss and css, we can mix rem with px with percentage here, in calc, var has to be put in #{}
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }

  .col-5-of-12 {
    width: calc(
      5 * ((100% - 11 * #{$gutter-horizontal}) / 12) + 4 * #{$gutter-horizontal}
    );
  }

  .col-7-of-12 {
    width: calc(
      7 * ((100% - 11 * #{$gutter-horizontal}) / 12) + 6 * #{$gutter-horizontal}
    );
  }
}
